<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About dnGREP" xml:space="preserve">
    <value>About dnGREP</value>
  </data>
  <data name="Acknowledgments" xml:space="preserve">
    <value>Acknowledgments</value>
  </data>
  <data name="after" xml:space="preserve">
    <value>after</value>
  </data>
  <data name="All dates" xml:space="preserve">
    <value>All dates</value>
  </data>
  <data name="All sizes" xml:space="preserve">
    <value>All sizes</value>
  </data>
  <data name="Asterisk pattern" xml:space="preserve">
    <value>Asterisk pattern</value>
  </data>
  <data name="Auto Position" xml:space="preserve">
    <value>Auto Position</value>
  </data>
  <data name="before and" xml:space="preserve">
    <value>before and</value>
  </data>
  <data name="Boolean operators" xml:space="preserve">
    <value>Boolean operators</value>
  </data>
  <data name="Build date" xml:space="preserve">
    <value>Build date</value>
  </data>
  <data name="Built on" xml:space="preserve">
    <value>Built on</value>
  </data>
  <data name="Capture group search" xml:space="preserve">
    <value>Capture group search</value>
  </data>
  <data name="Case sensitive" xml:space="preserve">
    <value>Case sensitive</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="Copy file names" xml:space="preserve">
    <value>Copy file names</value>
  </data>
  <data name="Copy files..." xml:space="preserve">
    <value>Copy files...</value>
  </data>
  <data name="Copy results" xml:space="preserve">
    <value>Copy results</value>
  </data>
  <data name="Copyright" xml:space="preserve">
    <value>Copyright</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>Created</value>
  </data>
  <data name="CSV Results" xml:space="preserve">
    <value>CSV Results</value>
  </data>
  <data name="C_ase sensitive" xml:space="preserve">
    <value>C_ase sensitive</value>
  </data>
  <data name="Delete files..." xml:space="preserve">
    <value>Delete files...</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="dnGREP" xml:space="preserve">
    <value>dnGREP</value>
  </data>
  <data name="dnGrep on GitHub" xml:space="preserve">
    <value>dnGrep on GitHub</value>
  </data>
  <data name="Dock Bottom" xml:space="preserve">
    <value>Dock Bottom</value>
  </data>
  <data name="Dock Right" xml:space="preserve">
    <value>Dock Right</value>
  </data>
  <data name="Dot as newline" xml:space="preserve">
    <value>Dot as newline</value>
  </data>
  <data name="Encoding:" xml:space="preserve">
    <value>Encoding:</value>
  </data>
  <data name="Everything" xml:space="preserve">
    <value>Everything</value>
  </data>
  <data name="Folder:" xml:space="preserve">
    <value>Folder:</value>
  </data>
  <data name="Follow symbolic links" xml:space="preserve">
    <value>Follow symbolic links</value>
  </data>
  <data name="From" xml:space="preserve">
    <value>From</value>
  </data>
  <data name="Highlight Groups" xml:space="preserve">
    <value>Highlight Groups</value>
  </data>
  <data name="Highlight Matches" xml:space="preserve">
    <value>Highlight Matches</value>
  </data>
  <data name="hours" xml:space="preserve">
    <value>hours</value>
  </data>
  <data name="Include binary files" xml:space="preserve">
    <value>Include binary files</value>
  </data>
  <data name="Include hidden folders" xml:space="preserve">
    <value>Include hidden folders</value>
  </data>
  <data name="Include subfolders" xml:space="preserve">
    <value>Include subfolders</value>
  </data>
  <data name="Max depth" xml:space="preserve">
    <value>Max depth</value>
  </data>
  <data name="Modified" xml:space="preserve">
    <value>Modified</value>
  </data>
  <data name="More" xml:space="preserve">
    <value>More</value>
  </data>
  <data name="More..." xml:space="preserve">
    <value>More...</value>
  </data>
  <data name="Move files..." xml:space="preserve">
    <value>Move files...</value>
  </data>
  <data name="Multiline" xml:space="preserve">
    <value>Multiline</value>
  </data>
  <data name="OK" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Past" xml:space="preserve">
    <value>Past</value>
  </data>
  <data name="Paths to ignore:" xml:space="preserve">
    <value>Paths to ignore:</value>
  </data>
  <data name="Paths to match:" xml:space="preserve">
    <value>Paths to match:</value>
  </data>
  <data name="Phonetic" xml:space="preserve">
    <value>Phonetic</value>
  </data>
  <data name="Pre_view file" xml:space="preserve">
    <value>Pre_view file</value>
  </data>
  <data name="Regex" xml:space="preserve">
    <value>Regex</value>
  </data>
  <data name="Replace" xml:space="preserve">
    <value>Replace</value>
  </data>
  <data name="Replace result:" xml:space="preserve">
    <value>Replace result:</value>
  </data>
  <data name="Replace with:" xml:space="preserve">
    <value>Replace with:</value>
  </data>
  <data name="Report" xml:space="preserve">
    <value>Report</value>
  </data>
  <data name="Reset Options" xml:space="preserve">
    <value>Reset Options</value>
  </data>
  <data name="Sample input text:" xml:space="preserve">
    <value>Sample input text:</value>
  </data>
  <data name="Save results" xml:space="preserve">
    <value>Save results</value>
  </data>
  <data name="Saving results to file..." xml:space="preserve">
    <value>Saving results to file...</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Search for:" xml:space="preserve">
    <value>Search for:</value>
  </data>
  <data name="Search in" xml:space="preserve">
    <value>Search in</value>
  </data>
  <data name="Search in ar_chives" xml:space="preserve">
    <value>Search in ar_chives</value>
  </data>
  <data name="Search Paralle_l" xml:space="preserve">
    <value>Search Paralle_l</value>
  </data>
  <data name="Search result:" xml:space="preserve">
    <value>Search result:</value>
  </data>
  <data name="Search _in results" xml:space="preserve">
    <value>Search _in results</value>
  </data>
  <data name="Show context lines" xml:space="preserve">
    <value>Show context lines</value>
  </data>
  <data name="Size is" xml:space="preserve">
    <value>Size is</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>Sort</value>
  </data>
  <data name="Stop after first match" xml:space="preserve">
    <value>Stop after first match</value>
  </data>
  <data name="Test" xml:space="preserve">
    <value>Test</value>
  </data>
  <data name="Test Expression" xml:space="preserve">
    <value>Test Expression</value>
  </data>
  <data name="Text" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="Text Results" xml:space="preserve">
    <value>Text Results</value>
  </data>
  <data name="to" xml:space="preserve">
    <value>to</value>
  </data>
  <data name="To_" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Use .gitignore" xml:space="preserve">
    <value>Use .gitignore</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Whole word" xml:space="preserve">
    <value>Whole word</value>
  </data>
  <data name="Wrap Text" xml:space="preserve">
    <value>Wrap Text</value>
  </data>
  <data name="XPath" xml:space="preserve">
    <value>XPath</value>
  </data>
  <data name="_About" xml:space="preserve">
    <value>_About</value>
  </data>
  <data name="_About_dnGrep..." xml:space="preserve">
    <value>_About dnGrep...</value>
  </data>
  <data name="_Bookmarks..." xml:space="preserve">
    <value>_Bookmarks...</value>
  </data>
  <data name="_Cancel" xml:space="preserve">
    <value>_Cancel</value>
  </data>
  <data name="_Dot as newline" xml:space="preserve">
    <value>_Dot as newline</value>
  </data>
  <data name="_Help" xml:space="preserve">
    <value>_Help</value>
  </data>
  <data name="_Multiline" xml:space="preserve">
    <value>_Multiline</value>
  </data>
  <data name="_Options..." xml:space="preserve">
    <value>_Options...</value>
  </data>
  <data name="_Phonetic" xml:space="preserve">
    <value>_Phonetic</value>
  </data>
  <data name="_Regex" xml:space="preserve">
    <value>_Regex</value>
  </data>
  <data name="_Search" xml:space="preserve">
    <value>_Search</value>
  </data>
  <data name="_Text" xml:space="preserve">
    <value>_Text</value>
  </data>
  <data name="_Undo" xml:space="preserve">
    <value>_Undo</value>
  </data>
  <data name="_Whole word" xml:space="preserve">
    <value>_Whole word</value>
  </data>
  <data name="_XPath" xml:space="preserve">
    <value>_XPath</value>
  </data>
</root>